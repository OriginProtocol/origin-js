{
  "contractName": "IMultiSigWallet",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "required",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "destination",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "submitTransaction",
      "outputs": [
        {
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\n\n\n/**\n * @title Interface for interacting with Gnosis MultiSigWallet.\n * @dev Avoids creating an explicit dependency on Gnosis MultiSigWallet, which\n * doesn't have an official npm package. This allows us to just use the ABI\n * to call the contract methods. The contract is deployed through the DApp &\n * desktop app, so we only need to make limited calls to it. Further signatures\n * also happen in the Gnosis apps.\n */\ncontract IMultiSigWallet {\n    mapping (address => bool) public isOwner;\n    uint public required;\n\n    /// @dev Allows an owner to submit and confirm a transaction.\n    /// @param destination Transaction target address.\n    /// @param value Transaction ether value.\n    /// @param data Transaction data payload.\n    /// @return Returns transaction ID.\n    function submitTransaction(address destination, uint value, bytes data)\n        public\n        returns (uint transactionId);\n}\n",
  "sourcePath": "/app/contracts/contracts/multisig/IMultiSigWallet.sol",
  "ast": {
    "absolutePath": "/app/contracts/contracts/multisig/IMultiSigWallet.sol",
    "exportedSymbols": {
      "IMultiSigWallet": [
        3666
      ]
    },
    "id": 3667,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3648,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Interface for interacting with Gnosis MultiSigWallet.\n@dev Avoids creating an explicit dependency on Gnosis MultiSigWallet, which\ndoesn't have an official npm package. This allows us to just use the ABI\nto call the contract methods. The contract is deployed through the DApp &\ndesktop app, so we only need to make limited calls to it. Further signatures\nalso happen in the Gnosis apps.",
        "fullyImplemented": false,
        "id": 3666,
        "linearizedBaseContracts": [
          3666
        ],
        "name": "IMultiSigWallet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3652,
            "name": "isOwner",
            "nodeType": "VariableDeclaration",
            "scope": 3666,
            "src": "477:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3651,
              "keyType": {
                "id": 3649,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "486:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "477:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3650,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "497:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3654,
            "name": "required",
            "nodeType": "VariableDeclaration",
            "scope": 3666,
            "src": "523:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3653,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "523:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Allows an owner to submit and confirm a transaction.\n @param destination Transaction target address.\n @param value Transaction ether value.\n @param data Transaction data payload.\n @return Returns transaction ID.",
            "id": 3665,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "submitTransaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3656,
                  "name": "destination",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "830:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3658,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "851:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3657,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3660,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "863:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3659,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "829:45:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3663,
                  "name": "transactionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "907:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "906:20:13"
            },
            "scope": 3666,
            "src": "803:124:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3667,
        "src": "446:483:13"
      }
    ],
    "src": "0:930:13"
  },
  "legacyAST": {
    "absolutePath": "/app/contracts/contracts/multisig/IMultiSigWallet.sol",
    "exportedSymbols": {
      "IMultiSigWallet": [
        3666
      ]
    },
    "id": 3667,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3648,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Interface for interacting with Gnosis MultiSigWallet.\n@dev Avoids creating an explicit dependency on Gnosis MultiSigWallet, which\ndoesn't have an official npm package. This allows us to just use the ABI\nto call the contract methods. The contract is deployed through the DApp &\ndesktop app, so we only need to make limited calls to it. Further signatures\nalso happen in the Gnosis apps.",
        "fullyImplemented": false,
        "id": 3666,
        "linearizedBaseContracts": [
          3666
        ],
        "name": "IMultiSigWallet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3652,
            "name": "isOwner",
            "nodeType": "VariableDeclaration",
            "scope": 3666,
            "src": "477:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3651,
              "keyType": {
                "id": 3649,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "486:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "477:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3650,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "497:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3654,
            "name": "required",
            "nodeType": "VariableDeclaration",
            "scope": 3666,
            "src": "523:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3653,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "523:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Allows an owner to submit and confirm a transaction.\n @param destination Transaction target address.\n @param value Transaction ether value.\n @param data Transaction data payload.\n @return Returns transaction ID.",
            "id": 3665,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "submitTransaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3656,
                  "name": "destination",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "830:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3658,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "851:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3657,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3660,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "863:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3659,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "829:45:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3663,
                  "name": "transactionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "907:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "906:20:13"
            },
            "scope": 3666,
            "src": "803:124:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3667,
        "src": "446:483:13"
      }
    ],
    "src": "0:930:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-26T00:12:44.247Z"
}